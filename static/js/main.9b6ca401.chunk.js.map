{"version":3,"sources":["redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-reducers.js","redux/store.js","components/Contacts/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/Contacts/ContactItem/ContactItem.jsx","components/Contacts/ContactList/ContactList.jsx","components/Container/Container.jsx","components/Section/Section.jsx","components/Loader/Loader.jsx","App.jsx","index.js","components/Contacts/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/Contacts/ContactItem/ContactItem.module.css","components/Contacts/ContactList/ContactList.module.css","components/Container/Container.module.css","components/Section/Section.module.css","components/Loader/Loader.module.css"],"names":["actions","getRequest","createAction","getSuccess","getError","addedRequest","addedSuccess","addedError","deleteRequest","deleteSuccess","deleteError","setFilter","resetFilter","axios","defaults","baseURL","operations","getContacts","dispatch","get","then","data","console","log","catch","error","addedContact","contact","post","deleteContact","id","delete","items","createReducer","_","payload","state","filter","el","loading","contactsReducer","combineReducers","store","configureStore","reducer","contacts","middleware","getDefaultMiddleware","concat","logger","devTools","process","connect","onAddedContact","newContact","value","useState","name","setName","number","setNumber","onSubmit","evt","preventDefault","uuid","slice","getState","find","toast","warn","success","handleSubmit","className","s","form","overlay","type","input","onChange","target","Button","variant","color","size","startIcon","filterAction","onReset","label","IconButton","aria-label","onClick","onDeleteContact","listItem","fullName","filteredContacts","toLowerCase","includes","container","map","Container","children","Section","title","Loading","height","width","useEffect","Loader","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.9b6ca401.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst getRequest = createAction('contacts/getRequest');\r\nconst getSuccess = createAction('contacts/getSucess');\r\nconst getError = createAction('contacts/getError');\r\n\r\nconst addedRequest = createAction('contacts/addedRequest');\r\nconst addedSuccess = createAction('contacts/addedSucess');\r\nconst addedError = createAction('contacts/addedError');\r\n\r\nconst deleteRequest = createAction('contacts/deleteRequest');\r\nconst deleteSuccess = createAction('contacts/deleteSucess');\r\nconst deleteError = createAction('contacts/deleteError');\r\n\r\nconst setFilter = createAction('filter/set');\r\nconst resetFilter = createAction('filter/reset');\r\n\r\nconst actions = {\r\n  getRequest,\r\n  getSuccess,\r\n  getError,\r\n\r\n  addedRequest,\r\n  addedSuccess,\r\n  addedError,\r\n\r\n  deleteRequest,\r\n  deleteSuccess,\r\n  deleteError,\r\n\r\n  setFilter,\r\n  resetFilter,\r\n};\r\n\r\nexport default actions;\r\n","import axios from 'axios';\r\nimport actions from './contacts-actions';\r\n\r\nconst {\r\n  getRequest,\r\n  getSuccess,\r\n  getError,\r\n  addedRequest,\r\n  addedSuccess,\r\n  addedError,\r\n  deleteRequest,\r\n  deleteSuccess,\r\n  deleteError,\r\n} = actions;\r\n\r\naxios.defaults.baseURL = 'http://localhost:4444';\r\n\r\nconst getContacts = () => dispatch => {\r\n  dispatch(getRequest());\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => {\r\n      console.log('get:', data);\r\n      dispatch(getSuccess(data));\r\n    })\r\n    .catch(error => dispatch(getError(error)));\r\n};\r\n\r\nconst addedContact = contact => dispatch => {\r\n  dispatch(addedRequest());\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(({ data }) => {\r\n      console.log('post:', data);\r\n      dispatch(addedSuccess(data));\r\n    })\r\n    .catch(error => dispatch(addedError(error)));\r\n};\r\n\r\nconst deleteContact = id => dispatch => {\r\n  dispatch(deleteRequest());\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => {\r\n      console.log('delete');\r\n      dispatch(deleteSuccess(id));\r\n    })\r\n    .catch(error => dispatch(deleteError(error)));\r\n};\r\n\r\n////////////////////////\r\n\r\nconst operations = {\r\n  getContacts,\r\n  addedContact,\r\n  deleteContact,\r\n};\r\n\r\nexport default operations;\r\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\r\nimport actions from './contacts-actions';\r\n\r\nconst {\r\n  getRequest,\r\n  getSuccess,\r\n  getError,\r\n\r\n  addedRequest,\r\n  addedSuccess,\r\n  addedError,\r\n\r\n  deleteRequest,\r\n  deleteSuccess,\r\n  deleteError,\r\n\r\n  setFilter,\r\n  resetFilter,\r\n} = actions;\r\n\r\nconst items = createReducer([], {\r\n  [getSuccess]: (_, { payload }) => payload,\r\n  [addedSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteSuccess]: (state, { payload }) => [\r\n    ...state.filter(el => el.id !== payload),\r\n  ],\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [setFilter]: (_, { payload }) => payload,\r\n  [resetFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [getRequest]: () => true,\r\n  [getSuccess]: () => false,\r\n  [getError]: () => false,\r\n\r\n  [addedRequest]: () => true,\r\n  [addedSuccess]: () => false,\r\n  [addedError]: () => false,\r\n\r\n  [deleteRequest]: () => true,\r\n  [deleteSuccess]: () => false,\r\n  [deleteError]: () => false,\r\n});\r\n\r\nconst contactsReducer = combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n});\r\n\r\nexport default contactsReducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport contactsReducer from './contacts/contacts-reducers';\r\n\r\nconst store = configureStore({\r\n  reducer: { contacts: contactsReducer },\r\n  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(logger),\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;\r\n","import { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport AddOutlinedIcon from '@material-ui/icons/AddOutlined';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport operations from 'redux/contacts/contacts-operations';\r\nimport actions from 'redux/contacts/contacts-actions';\r\nimport store from 'redux/store';\r\n\r\nimport s from './ContactForm.module.css';\r\n\r\nconst ContactForm = ({ onAddedContact, setFilter }) => {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleSubmit = evt => {\r\n    evt.preventDefault();\r\n    const newContact = {\r\n      id: uuid().slice(30),\r\n      name,\r\n      number,\r\n    };\r\n    setName('');\r\n    setNumber('');\r\n\r\n    const prevState = store.getState().contacts.items;\r\n    const contactFound = prevState.find(el => el.name === name);\r\n    if (contactFound) {\r\n      toast.warn(`\"${name}\" is already in contacts`);\r\n      setFilter(name);\r\n      return;\r\n    } else if (!name) {\r\n      toast.error('the \"Name\" field must contain the name of the contact');\r\n      return;\r\n    } else if (!number) {\r\n      toast.error('the \"Number\" field must contain the contact number');\r\n      return;\r\n    }\r\n\r\n    toast.success(\r\n      `Contact \"${name}\" with number \"${number}\" has been successfully created`,\r\n    );\r\n    onAddedContact(newContact);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={evt => handleSubmit(evt)} className={s.form}>\r\n      <div className={s.overlay}>\r\n        <label>\r\n          <span>Name</span>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            className={s.input}\r\n            value={name}\r\n            onChange={evt => setName(evt.target.value)}\r\n          />\r\n        </label>\r\n\r\n        <label>\r\n          <span>Number</span>\r\n          <input\r\n            type=\"number\"\r\n            name=\"number\"\r\n            className={s.input}\r\n            value={number}\r\n            onChange={evt => setNumber(evt.target.value)}\r\n          />\r\n        </label>\r\n      </div>\r\n      <Button\r\n        type=\"submit\"\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        size=\"small\"\r\n        startIcon={<AddOutlinedIcon />}\r\n      >\r\n        Add contact\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nContactForm.propTypes = {\r\n  onAddedContact: PropTypes.func.isRequired,\r\n  setFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onAddedContact: newContact => dispatch(operations.addedContact(newContact)),\r\n    setFilter: value => dispatch(actions.setFilter(value)),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n","import { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport RotateLeftOutlinedIcon from '@material-ui/icons/RotateLeftOutlined';\r\n\r\nimport filterAction from 'redux/contacts/contacts-actions';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({ filter, setFilter, onReset }) => {\r\n  return (\r\n    <div className={s.filter}>\r\n      <label>\r\n        <span className={s.label}>Filter</span>\r\n        <input\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          className={s.input}\r\n          value={filter}\r\n          onChange={evt => setFilter(evt.target.value)}\r\n        />\r\n      </label>\r\n\r\n      <IconButton\r\n        aria-label=\"delete\"\r\n        onClick={() => {\r\n          toast.success('Filter cleaned successfully');\r\n          onReset();\r\n        }}\r\n      >\r\n        {filter && <RotateLeftOutlinedIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  setFilter: PropTypes.func.isRequired,\r\n  onReset: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  filter: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setFilter: value => dispatch(filterAction.setFilter(value)),\r\n    onReset: () => dispatch(filterAction.resetFilter('')),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport operations from 'redux/contacts/contacts-operations';\r\nimport s from './ContactItem.module.css';\r\n\r\nconst ContactItem = ({ contact, onDeleteContact }) => {\r\n  const { id, name, number } = contact;\r\n  return (\r\n    <li className={s.listItem}>\r\n      <div className={s.fullName}>\r\n        <span>{name}: </span>\r\n        <span>{number}</span>\r\n      </div>\r\n      <IconButton\r\n        aria-label=\"Delete\"\r\n        onClick={() => {\r\n          toast.success(`Contact \"${name}\" successfully deleted`);\r\n          onDeleteContact(id);\r\n        }}\r\n      >\r\n        <DeleteIcon />\r\n      </IconButton>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactItem.propTypes = {\r\n  contact: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n  }).isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onDeleteContact: contact => dispatch(operations.deleteContact(contact)),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactItem);\r\n","import { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ContactItem from 'components/Contacts/ContactItem';\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, filter }) => {\r\n  const filteredContacts = contacts.filter(el =>\r\n    el.name.toLowerCase().includes(filter.toLowerCase()),\r\n  );\r\n\r\n  return (\r\n    <ul className={s.container}>\r\n      {filteredContacts.map(el => (\r\n        <ContactItem contact={el} key={el.id} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  filter: PropTypes.string.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: state.contacts.items,\r\n  filter: state.contacts.filter,\r\n});\r\n\r\nexport default connect(mapStateToProps)(ContactList);\r\n","import PropTypes from 'prop-types';\r\nimport s from './Container.module.css';\r\n\r\nexport default function Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <section>\r\n      <h2 className={s.title}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.element.isRequired,\r\n};\r\n","import Loader from 'react-loader-spinner';\r\nimport s from './Loader.module.css';\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div className={s.container}>\r\n      <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={80} width={80} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { ToastContainer } from 'react-toastify';\r\n\r\nimport ContactForm from 'components/Contacts/ContactForm';\r\nimport Filter from 'components/Filter';\r\nimport ContactList from 'components/Contacts/ContactList';\r\nimport Container from 'components/Container';\r\nimport Section from 'components/Section';\r\nimport Loader from 'components/Loader';\r\n\r\nimport operations from './redux/contacts/contacts-operations';\r\n\r\nconst App = ({ loading, getContacts }) => {\r\n  useEffect(() => {\r\n    getContacts();\r\n  }, []); // eslint-disable-line\r\n\r\n  return (\r\n    <Container>\r\n      {loading && <Loader />}\r\n      <Section title=\"Phonebook\">\r\n        <ContactForm />\r\n      </Section>\r\n\r\n      <Section title=\"Contacts\">\r\n        <div>\r\n          <Filter />\r\n          <ContactList />\r\n        </div>\r\n      </Section>\r\n      <ToastContainer />\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  loading: state.contacts.loading,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return { getContacts: () => dispatch(operations.getContacts()) };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from 'redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__GNmUM\",\"input\":\"ContactForm_input__8FsHP\",\"overlay\":\"ContactForm_overlay__1dGyd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__2-Q2K\",\"label\":\"Filter_label__2iqOF\",\"input\":\"Filter_input__1AEB4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactItem_listItem__2LAMT\",\"fullName\":\"ContactItem_fullName__MC9Lt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactList_container__1nOC6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2qGcC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__2dhfz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Loader_container__20hwO\"};"],"sourceRoot":""}