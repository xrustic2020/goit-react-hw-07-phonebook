{"version":3,"sources":["redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","redux/contacts/contacts-reducers.js","redux/store.js","components/Contacts/ContactForm/ContactForm.jsx","components/Contacts/ContactForm/checkingContact.js","components/Contacts/ContactForm/ContactForm.container.js","components/Filter/Filter.jsx","components/Filter/Filter.container.js","components/Contacts/ContactItem/ContactItem.jsx","components/Contacts/ContactItem/ContactItem.container.js","components/Contacts/ContactList/ContactList.jsx","components/Contacts/ContactList/ContactList.container.js","components/Container/Container.jsx","components/Section/Section.jsx","components/Loader/Loader.jsx","App.jsx","index.js","components/Contacts/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/Contacts/ContactItem/ContactItem.module.css","components/Contacts/ContactList/ContactList.module.css","components/Container/Container.module.css","components/Section/Section.module.css","components/Loader/Loader.module.css"],"names":["actions","getRequest","createAction","getSuccess","getError","addedRequest","addedSuccess","addedError","deleteRequest","deleteSuccess","deleteError","setFilter","resetFilter","axios","defaults","baseURL","operations","getContacts","dispatch","get","then","data","catch","error","addedContact","contact","post","toast","success","name","number","deleteContact","id","delete","filterValue","state","contacts","filter","isloading","loading","filteredContacts","createSelector","items","el","toLowerCase","includes","createReducer","_","payload","contactsReducer","combineReducers","store","configureStore","reducer","devTools","process","ContactForm","onAddedContact","useState","setName","setNumber","handleSubmit","evt","preventDefault","isCheckedContact","getState","find","warn","checkingContact","onSubmit","className","s","form","overlay","type","input","value","onChange","target","Button","variant","color","size","startIcon","connect","newContact","Filter","onReset","label","IconButton","aria-label","onClick","ContactItem","onDeleteContact","listItem","fullName","ContactList","container","map","Container","children","Section","title","Loading","height","width","useEffect","Loader","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.2491ecf3.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst getRequest = createAction('contacts/getRequest');\r\nconst getSuccess = createAction('contacts/getSucess');\r\nconst getError = createAction('contacts/getError');\r\n\r\nconst addedRequest = createAction('contacts/addedRequest');\r\nconst addedSuccess = createAction('contacts/addedSucess');\r\nconst addedError = createAction('contacts/addedError');\r\n\r\nconst deleteRequest = createAction('contacts/deleteRequest');\r\nconst deleteSuccess = createAction('contacts/deleteSucess');\r\nconst deleteError = createAction('contacts/deleteError');\r\n\r\nconst setFilter = createAction('filter/set');\r\nconst resetFilter = createAction('filter/reset');\r\n\r\nconst actions = {\r\n  getRequest,\r\n  getSuccess,\r\n  getError,\r\n\r\n  addedRequest,\r\n  addedSuccess,\r\n  addedError,\r\n\r\n  deleteRequest,\r\n  deleteSuccess,\r\n  deleteError,\r\n\r\n  setFilter,\r\n  resetFilter,\r\n};\r\n\r\nexport default actions;\r\n","import axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport actions from './contacts-actions';\r\n\r\nconst {\r\n  getRequest,\r\n  getSuccess,\r\n  getError,\r\n  addedRequest,\r\n  addedSuccess,\r\n  addedError,\r\n  deleteRequest,\r\n  deleteSuccess,\r\n  deleteError,\r\n} = actions;\r\n\r\naxios.defaults.baseURL = 'http://localhost:4444';\r\n\r\nconst getContacts = () => dispatch => {\r\n  dispatch(getRequest());\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => {\r\n      dispatch(getSuccess(data));\r\n    })\r\n    .catch(error => dispatch(getError(error)));\r\n};\r\n\r\nconst addedContact = contact => dispatch => {\r\n  dispatch(addedRequest());\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(({ data }) => {\r\n      dispatch(addedSuccess(data));\r\n      toast.success(\r\n        `Contact \"${data.name}\" with number \"${data.number}\" has been successfully created`,\r\n      );\r\n    })\r\n    .catch(error => dispatch(addedError(error)));\r\n};\r\n\r\nconst deleteContact = ({ id, name }) => dispatch => {\r\n  dispatch(deleteRequest());\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => {\r\n      dispatch(deleteSuccess(id));\r\n      toast.success(`Contact \"${name}\" successfully deleted`);\r\n    })\r\n    .catch(error => dispatch(deleteError(error)));\r\n};\r\n\r\n////////////////////////\r\n\r\nconst operations = {\r\n  getContacts,\r\n  addedContact,\r\n  deleteContact,\r\n};\r\n\r\nexport default operations;\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const allContacts = state => state.contacts.items;\r\nexport const filterValue = state => state.contacts.filter;\r\nexport const isloading = state => state.contacts.loading;\r\nexport const filteredContacts = createSelector(\r\n  [allContacts, filterValue],\r\n  (contacts, filter) =>\r\n    contacts.filter(el => el.name.toLowerCase().includes(filter.toLowerCase())),\r\n);\r\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\r\nimport actions from './contacts-actions';\r\n\r\nconst {\r\n  getRequest,\r\n  getSuccess,\r\n  getError,\r\n\r\n  addedRequest,\r\n  addedSuccess,\r\n  addedError,\r\n\r\n  deleteRequest,\r\n  deleteSuccess,\r\n  deleteError,\r\n\r\n  setFilter,\r\n  resetFilter,\r\n} = actions;\r\n\r\nconst items = createReducer([], {\r\n  [getSuccess]: (_, { payload }) => payload,\r\n  [addedSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteSuccess]: (state, { payload }) => [\r\n    ...state.filter(el => el.id !== payload),\r\n  ],\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [setFilter]: (_, { payload }) => payload,\r\n  [resetFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [getRequest]: () => true,\r\n  [getSuccess]: () => false,\r\n  [getError]: () => false,\r\n\r\n  [addedRequest]: () => true,\r\n  [addedSuccess]: () => false,\r\n  [addedError]: () => false,\r\n\r\n  [deleteRequest]: () => true,\r\n  [deleteSuccess]: () => false,\r\n  [deleteError]: () => false,\r\n});\r\n\r\nconst contactsReducer = combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n});\r\n\r\nexport default contactsReducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\n// import logger from 'redux-logger';\r\nimport contactsReducer from './contacts/contacts-reducers';\r\n\r\nconst store = configureStore({\r\n  reducer: { contacts: contactsReducer },\r\n  // middleware: getDefaultMiddleware => getDefaultMiddleware().concat(logger),\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;\r\n","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport AddOutlinedIcon from '@material-ui/icons/AddOutlined';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport s from './ContactForm.module.css';\r\nimport checkingContact from './checkingContact';\r\n\r\nconst ContactForm = ({ onAddedContact, setFilter }) => {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleSubmit = evt => {\r\n    evt.preventDefault();\r\n    const isCheckedContact = checkingContact(name, number, setFilter);\r\n    setName('');\r\n    setNumber('');\r\n\r\n    if (isCheckedContact) onAddedContact(isCheckedContact);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={evt => handleSubmit(evt)} className={s.form}>\r\n      <div className={s.overlay}>\r\n        <label>\r\n          <span>Name</span>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            className={s.input}\r\n            value={name}\r\n            onChange={evt => setName(evt.target.value)}\r\n          />\r\n        </label>\r\n\r\n        <label>\r\n          <span>Number</span>\r\n          <input\r\n            type=\"number\"\r\n            name=\"number\"\r\n            className={s.input}\r\n            value={number}\r\n            onChange={evt => setNumber(evt.target.value)}\r\n          />\r\n        </label>\r\n      </div>\r\n      <Button\r\n        type=\"submit\"\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        size=\"small\"\r\n        startIcon={<AddOutlinedIcon />}\r\n      >\r\n        Add contact\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nContactForm.propTypes = {\r\n  onAddedContact: PropTypes.func.isRequired,\r\n  setFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;\r\n","import { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport store from 'redux/store';\r\n\r\nexport default function checkingContact(name, number, setFilter) {\r\n  if (!name) {\r\n    toast.error('the \"Name\" field must contain the name of the contact');\r\n    return;\r\n  } else if (!number) {\r\n    toast.error('the \"Number\" field must contain the contact number');\r\n    return;\r\n  }\r\n\r\n  const prevState = store.getState().contacts.items;\r\n  const contactFound = prevState.find(el => el.name === name);\r\n\r\n  if (contactFound) {\r\n    toast.warn(`\"${name}\" is already in contacts`);\r\n    setFilter(name);\r\n    return;\r\n  }\r\n\r\n  return { name, number };\r\n}\r\n","import { connect } from 'react-redux';\r\nimport { operations, actions } from 'redux/contacts';\r\n\r\nimport ContactForm from './ContactForm';\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onAddedContact: newContact => dispatch(operations.addedContact(newContact)),\r\n    setFilter: value => dispatch(actions.setFilter(value)),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n","import PropTypes from 'prop-types';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport RotateLeftOutlinedIcon from '@material-ui/icons/RotateLeftOutlined';\r\n\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({ filter, setFilter, onReset }) => {\r\n  return (\r\n    <div className={s.filter}>\r\n      <label>\r\n        <span className={s.label}>Filter</span>\r\n        <input\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          className={s.input}\r\n          value={filter}\r\n          onChange={evt => setFilter(evt.target.value)}\r\n        />\r\n      </label>\r\n\r\n      <IconButton\r\n        aria-label=\"delete\"\r\n        onClick={() => {\r\n          onReset();\r\n          toast.success('Filter cleaned successfully');\r\n        }}\r\n      >\r\n        {filter && <RotateLeftOutlinedIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  setFilter: PropTypes.func.isRequired,\r\n  onReset: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import { connect } from 'react-redux';\r\nimport { actions, filterValue } from 'redux/contacts';\r\n\r\nimport Filter from './Filter';\r\n\r\nconst mapStateToProps = state => ({\r\n  filter: filterValue(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setFilter: value => dispatch(actions.setFilter(value)),\r\n    onReset: () => dispatch(actions.resetFilter('')),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import PropTypes from 'prop-types';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport s from './ContactItem.module.css';\r\n\r\nconst ContactItem = ({ contact, onDeleteContact }) => {\r\n  const { name, number } = contact;\r\n  return (\r\n    <li className={s.listItem}>\r\n      <div className={s.fullName}>\r\n        <span>{name}: </span>\r\n        <span>{number}</span>\r\n      </div>\r\n      <IconButton aria-label=\"Delete\" onClick={() => onDeleteContact(contact)}>\r\n        <DeleteIcon />\r\n      </IconButton>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactItem.propTypes = {\r\n  contact: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n  }).isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactItem;\r\n","import { connect } from 'react-redux';\r\nimport { operations } from 'redux/contacts';\r\n\r\nimport ContactItem from './ContactItem';\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onDeleteContact: contact => dispatch(operations.deleteContact(contact)),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactItem);\r\n","import PropTypes from 'prop-types';\r\n\r\nimport ContactItem from 'components/Contacts/ContactItem';\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts }) => {\r\n  return (\r\n    <ul className={s.container}>\r\n      {contacts.map(el => (\r\n        <ContactItem contact={el} key={el.id} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import { connect } from 'react-redux';\r\nimport { filteredContacts } from 'redux/contacts';\r\nimport ContactList from './ContactList';\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: filteredContacts(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(ContactList);\r\n","import PropTypes from 'prop-types';\r\nimport s from './Container.module.css';\r\n\r\nexport default function Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <section>\r\n      <h2 className={s.title}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.element.isRequired,\r\n};\r\n","import Loader from 'react-loader-spinner';\r\nimport s from './Loader.module.css';\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div className={s.container}>\r\n      <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={80} width={80} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { ToastContainer } from 'react-toastify';\r\n\r\nimport ContactForm from 'components/Contacts/ContactForm';\r\nimport Filter from 'components/Filter';\r\nimport ContactList from 'components/Contacts/ContactList';\r\nimport Container from 'components/Container';\r\nimport Section from 'components/Section';\r\nimport Loader from 'components/Loader';\r\n\r\nimport { operations, isloading } from 'redux/contacts';\r\n\r\nconst App = ({ loading, getContacts }) => {\r\n  useEffect(() => {\r\n    getContacts();\r\n  }, []); // eslint-disable-line\r\n\r\n  return (\r\n    <Container>\r\n      {loading && <Loader />}\r\n      <Section title=\"Phonebook\">\r\n        <ContactForm />\r\n      </Section>\r\n\r\n      <Section title=\"Contacts\">\r\n        <div>\r\n          <Filter />\r\n          <ContactList />\r\n        </div>\r\n      </Section>\r\n      <ToastContainer />\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  loading: isloading(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return { getContacts: () => dispatch(operations.getContacts()) };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from 'redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__c-6D6\",\"input\":\"ContactForm_input__1ie9w\",\"overlay\":\"ContactForm_overlay__2rhH3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__3IgpU\",\"label\":\"Filter_label__1bmi8\",\"input\":\"Filter_input__2rkXO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactItem_listItem__12Zyd\",\"fullName\":\"ContactItem_fullName__3CXti\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactList_container__s2rcm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2t4d-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__36Qla\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Loader_container__3JKgj\"};"],"sourceRoot":""}